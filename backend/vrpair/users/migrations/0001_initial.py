# Generated by Django 3.1.13 on 2021-10-27 13:02

import django.contrib.postgres.fields
import django.core.management.utils
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Preferences",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("m", "Male"),
                                ("n", "Male Trans"),
                                ("f", "Female"),
                                ("g", "Female Trans"),
                                ("o", "Other"),
                            ],
                            max_length=1,
                        ),
                        size=None,
                    ),
                ),
                (
                    "setup",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("d", "Desktop"),
                                ("q", "Quest"),
                                ("p", "Pcvr"),
                                ("f", "Fbt"),
                            ],
                            max_length=1,
                        ),
                        size=8,
                    ),
                ),
                (
                    "furry",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[("y", "Yes"), ("n", "No"), ("b", "Both")],
                            max_length=1,
                        ),
                        size=8,
                    ),
                ),
                (
                    "feminine_avatar",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[("y", "Yes"), ("n", "No"), ("b", "Both")],
                            max_length=1,
                        ),
                        size=8,
                    ),
                ),
                (
                    "role",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[("s", "Sub"), ("d", "Dom"), ("x", "Switch")],
                            max_length=1,
                        ),
                        size=8,
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("age_min", models.PositiveSmallIntegerField()),
                ("age_max", models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("m", "Male"),
                            ("n", "Male Trans"),
                            ("f", "Female"),
                            ("g", "Female Trans"),
                            ("o", "Other"),
                        ],
                        max_length=1,
                    ),
                ),
                ("other_gender", models.CharField(max_length=32, null=True)),
                (
                    "attracted_gender",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("m", "Male"),
                                ("n", "Male Trans"),
                                ("f", "Female"),
                                ("g", "Female Trans"),
                                ("o", "Other"),
                            ],
                            max_length=1,
                        ),
                        size=8,
                    ),
                ),
                ("description", models.CharField(max_length=512, null=True)),
                (
                    "setup",
                    models.CharField(
                        choices=[
                            ("d", "Desktop"),
                            ("q", "Quest"),
                            ("p", "Pcvr"),
                            ("f", "Fbt"),
                        ],
                        max_length=1,
                    ),
                ),
                ("furry", models.BooleanField()),
                ("feminine_avatar", models.BooleanField()),
                (
                    "role",
                    models.CharField(
                        choices=[("s", "Sub"), ("d", "Dom"), ("x", "Switch")],
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "secret_key",
                    models.CharField(
                        default=django.core.management.utils.get_random_secret_key,
                        max_length=255,
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("password", models.CharField(max_length=128, null=True)),
                ("last_login", models.DateTimeField(default=django.utils.timezone.now)),
                ("discord_id", models.CharField(max_length=32)),
                ("discord_username", models.CharField(max_length=32)),
                ("discord_discriminator", models.CharField(max_length=4, unique=True)),
                ("birth_date", models.DateField(null=True)),
                ("name", models.CharField(max_length=32, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "preferences",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.preferences",
                    ),
                ),
                (
                    "profile",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.profile",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
